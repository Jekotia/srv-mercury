version: "3.2"
services:
  discord-irc:
    image: jekotia/discord-irc
    container_name: discord-irc
    restart: unless-stopped
    volumes:
    - ${_DISCORDIRC_DATA}:/data

  mailer:
    container_name: "mailer"
    image: "tecnativa/postfix-relay"
    restart: "always"
    environment:
    - "MAIL_RELAY_HOST=smtp.gmail.com"
    - "MAIL_RELAY_PORT=587"
    - "MAIL_RELAY_USER=mercury@jekotia.net"
    - "MAIL_RELAY_PASS=${SMTP_PASSWORD}"
    volumes:
    - ${_MAILER_DATA}/queue:/var/spool/postfix
    networks:
      mailer:

  # https://github.com/HenryQW/Awesome-TTRSS/blob/master/docker-compose.yml
  ##database.postgres:
  ttrss.database:
    image: postgres:alpine
    ##container_name: postgres
    container_name: ttrss.database
    environment:
    - POSTGRES_PASSWORD=${TTRSS_POSTGRES_PASSWORD}
    volumes:
    - ${_TTRSS_DATABASE_DATA}:/var/lib/postgresql/data
    restart: always
    networks:
    - ttrss

  ##service.rss:
  ttrss:
    image: wangqiru/ttrss:latest
    container_name: ttrss
    #ports:
    #- 181:80
    environment:
    - SELF_URL_PATH=https://ttrss.jekotia.net/
    ##- DB_HOST=database.postgres
    - DB_HOST=ttrss.database
    - DB_PORT=5432
    - DB_NAME=ttrss
    - DB_USER=postgres
    - DB_PASS=${TTRSS_POSTGRES_PASSWORD} # please change the password
    - ENABLE_PLUGINS=auth_internal,fever # auth_internal is required. Plugins enabled here will be enabled for all users as system plugins
    stdin_open: true
    tty: true
    restart: always
    command: sh -c 'sh /wait-for.sh $$DB_HOST:$$DB_PORT -- php /configure-db.php && exec s6-svscan /etc/s6/'
    networks:
    - proxy
    - ttrss
    depends_on:
    - ttrss.database
    labels:
      caddy.address: ttrss.jekotia.net
      caddy.targetport: "80"
      caddy.proxy.transparent: ""


#-#  ##service.mercury: # set Mercury Parser API endpoint to `service.mercury:3000` on TTRSS plugin setting page
#-#  ttrss.mercury: # set Mercury Parser API endpoint to `ttrss.mercury:3000` on TTRSS plugin setting page
#-#    image: wangqiru/mercury-parser-api:latest
#-#    ##container_name: mercury
#-#    container_name: ttrss.mercury
#-#    expose:
#-#      - 3000
#-#    restart: always
#-#    networks:
#-#    - ttrss

###  ##service.opencc: # set OpenCC API endpoint to `service.opencc:3000` on TTRSS plugin setting page
###  ttrss.opencc: # set OpenCC API endpoint to `ttrss.opencc:3000` on TTRSS plugin setting page
###    image: wangqiru/opencc-api-server:latest
###    ##container_name: opencc
###    container_name: ttrss.opencc
###    environment:
###      - NODE_ENV=production
###    expose:
###      - 3000
###    restart: always
###    networks:
###    - ttrss

  weechat:
    image: jekotia/weechat
    container_name: weechat
    restart: "always"
    volumes:
    - ${_WEECHAT_DATA}:/data
    networks:
    - proxy
    stdin_open: true
    tty: true
    labels:
      caddy_1.address: mercury.jekotia.net
      caddy_1.proxy: "/weechat weechat:9001"
      caddy_1.proxy.websocket: ""

#  grafana:
#    image: grafana/grafana:6.1.6
#    container_name: grafana
#    restart: "always"
#    user: "472"
#    environment:
#    - "GF_SERVER_ROOT_URL=https://mercury.jekotia.net/metrics"
#    - "GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}"
#    volumes:
#    - "${_GRAFANA_DATA}/storage:/var/lib/grafana"
#    networks:
#    - "proxy"
#    - "influxdb"
#    labels:
#      caddy.address: mercury.jekotia.net/metrics
#      caddy.targetport: "3000"
#      caddy.proxy._1: "transparent"

#  telegraf:
#    image: "telegraf:1.9.5"
#    container_name: "telegraf"
#    restart: "always"
#    environment:
#    - "HOST_PROC=/host/proc" #-> For monitoring host filesystem
#    volumes:
#     - "${_TELEGRAF_DATA}/telegraf.conf:/etc/telegraf/telegraf.conf:ro"
#     - "/proc:/host/proc:ro" #-> For monitoring host filesystem
#     - "/var/run/docker.sock:/var/run/docker.sock" #-> For monitoring docker on host
##    ports:
##    - "8125:8125" #-> StatsD
##    - "8092:8092" #-> UDP
##    - "8094:8094" #-> TCP
#    depends_on:
#    - "influxdb"
#    networks:
#    - "influxdb"

#  influxdb:
#    image: "influxdb:1.7.6"
#    container_name: "influxdb"
#    restart: "always"
#    environment:
#    - "INFLUXDB_DB=telegraf"
#    - "INFLUXDB_USER=telegraf"
#    - "INFLUXDB_USER_PASSWORD=${TELEGRAF_DB_PASSWORD}"
#    volumes:
#    - "${_INFLUXDB_DATA}/db:/var/lib/influxdb"
##    ports:
##    - "8083:8083" #-> Administrator interface port, if it is enabled
##    - "8086:8086" #-> HTTP API port
##    - "2003:2003" #-> Graphite support, if it is enabled
#    networks:
#    - "influxdb"

#  chronograf:
#    image: "chronograf:1.7.11"
#    container_name: "chronograf"
#    restart: "always"
#    command: "--influxdb-url=http://influxdb:8086"
#    volumes:
#    - "${_CHRONOGRAF_DATA}/data:/var/lib/chronograf"
#    depends_on:
#    - "influxdb"
#    networks:
##    - "proxy"
#    - "influxdb"
#    labels:
#      caddy.address: mercury.jekotia.net/chronograf
#      caddy.targetport: "8888"
#      caddy.proxy._1: "transparent"


networks:
  proxy:
    external:
      name: core_proxy
  mailer:
  ttrss:
#  influxdb:

version: "3.3"

services:
  traefik:
    image: "traefik:v2.1"
    container_name: "traefik"
    command:
      #- "--log.level=DEBUG"
      - "--api.dashboard=true"
      - "--api.insecure=false"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.dnschallenge=true"
      - "--certificatesresolvers.myresolver.acme.dnschallenge.provider=cloudflare"
      #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=contact@jekotia.net"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      #- "8080:8080"
    networks:
      - "proxy"
    environment:
      - CLOUDFLARE_EMAIL=$TRAEFIK_CLOUDFLARE_EMAIL
      - CLOUDFLARE_API_KEY=$TRAEFIK_CLOUDFLARE_API_KEY
    volumes:
      - "${_TRAEFIK_DATA}:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      #-> Enable the Traefik dashboard
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`mercury.jekotia.net`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=myresolver"
      #-> Extras for dashboard auth
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.middlewares.auth.digestauth.users=${TRAEFIK_USER}:${TRAEFIK_REALM}:${TRAEFIK_PASS}"
      - "traefik.http.routers.api.middlewares=auth"

      #-> Redirect HTTP to HTTPS
      #-> https://stackoverflow.com/a/58477067/1871306
      # middleware redirect
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      # global redirect to https
      - "traefik.http.routers.redirs.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.redirs.entrypoints=web"
      - "traefik.http.routers.redirs.middlewares=redirect-to-https"

  portainer:
    image: "portainer/portainer"
    container_name: "portainer"
    restart: "always"
    command: "-H unix:///var/run/docker.sock"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "${_PORTAINER_DATA}/portainer:/data"
    networks:
      - "proxy"
    labels:
      # - "com.centurylinklabs.watchtower.enable=false"
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`docker.jekotia.net`)" # && PathPrefix(`/docker`)"
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.routers.portainer.tls.certresolver=myresolver"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"

#      - "traefik.tcp.routers.portainer.rule=HostSNI(`docker.jekotia.net`) && PathPrefix(`/api/websocket/`)"
#      - "traefik.tcp.routers.portainer.tls=true"
#      - "traefik.tcp.services.portainer.loadbalancer.server.port=9000"

#   watchtower:
#     image: "v2tec/watchtower"
#     container_name: "watchtower"
#     restart: "always"
#     volumes:
#       - "/var/run/docker.sock:/var/run/docker.sock"
# #      - "/root/.docker/config.json:/config.json"
# #    command: --interval 30

networks:
  proxy:
